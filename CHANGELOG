v6 11/20/2010
  Simplified the "setDefault" functions to be a single function call that takes in a selector
  Implemented issue 5 -- JSS now supports comma delimited selectors (ex "#Label1,#Label2,.Label3 { text: 'Hi!' }")
  Fixed issue 7 -- includeJSSGlobal broken by subdirectories
  Implemented issue 8 -- Create test / demo project
  Included json.org's JSON2 functions as redux.JSON to contend with Titanium's misimplementation on Android
  Tweaked global storage to use json.org's JSON2 functions instead of Titanium's

v5 11/18/2010
	Added two new include functions: includeJSSGlobal and includeGlobal
	JSS now caches cross context, so the parsing performance hit is reduced
	Cleaned up the namespacing a bit more; all core functionality is in the redux namespace with shorthands for commonly used functions like includeJSS
	Tweaked spacing in code for cleaner look
	Updated JSDoc for several of the functions

v4.1	Removed extra spacing added to class names and IDs

v4  11/16/2010
	Fixed issue 4 -- Slow JSS parsing
	Altered attributes to now come before their selectors, instead of after (see the README for more information)

v3  11/11/2010
	Fixed issue 1 -- Nested objects in JSS are now supported in all cases
	Fixed issue 2 -- Class names are now supported in JSS
	Cleaned up the redux namespace
	Expanded natural constructor to support anything created by Ti.*.create*, like Ti.Network.createHTTPClient
	JSS can now set defaults for non UI elements, like HTTPClients (so long as the objects are constructed through redux)
	Element selection by type, class, and ID now works like jQuery -- $('.myButton') will return an array of objects matching the selector
	JSS now supports comments taking the form /* a comment */
	Updated the README with the new goodies and updated old ones
	
v2	11/09/2010
	JSS support! -- include easy localization
	Added a wrapper context $ function so we can support prototyping
	Event binding like "$(new Label()).click(function() { });"
	Added support for setting defaults by the ID of the element
	Removed enhanced include function; Appcelerator's already supported multiple files at once
	Added redux.min.js
	Updated the README with all the new goodies and the old ones

v1	11/08/2010
	Added shorthand to commonly used functions like "info('Hello, World!');"
	Easy UI constructors like "new Label()"
	Default values for UI elements made through Redux like "Label.setDefault({text:'Awesome'});"
	Enhanced include function supporting multiple files